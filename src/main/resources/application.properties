spring.application.name=restful-web-services
logging.level.org.springframework = info
spring.sql.init.mode=always
#below one is to display all the end points of actuator
management.endpoints.web.exposure.include = *
spring.h2.console.enabled=true
#below version of url is for h2-db
#spring.datasource.url=jdbc:h2:mem:testdb
#below version is for sql
spring.datasource.url=jdbc:mysql://localhost:3306/social-media-database
#below details are username and password set for sqldb
spring.datasource.username=social-media-user
spring.datasource.password=dummypassword
#This property tells Hibernate how to handle schema generation when your Spring Boot app starts.
#
#Possible values:
#
#none ? Do nothing (default in production).
#
#validate ? Only validate the schema against your entity classes. Fails if mismatch.
#
#update ? Updates the database schema to match your entity classes without dropping data.
#
#Example: If you add a new column in your @Entity, Hibernate will ALTER TABLE automatically.
#
#?? Risk: Useful for development, but dangerous in production (can cause unexpected schema drift).
#
#create ? Drops the schema (if exists) and creates a new one at startup.
#
#create-drop ? Same as create, but also drops the schema when the session factory closes (e.g., on app shutdown).
#
#? update = safe for local/dev since it automatically evolves your DB schema as you change entities.

spring.jpa.hibernate.ddl-auto=update

#Tells Hibernate which SQL dialect to use when generating queries for your database.
#
#Each database (MySQL, PostgreSQL, Oracle, SQL Server, etc.) has slightly different SQL syntax.
#
#Example:
#
#MySQL uses LIMIT for pagination.
#
#Oracle uses ROWNUM.
#
#Setting the dialect ensures Hibernate generates the correct SQL.

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#data.sql under resources is executed before table is created in h2DB so we want to delay it using below property

spring.jpa.defer-datasource-initialization=true
spring.jpa.show-sql=true
spring.security.user.name=username
spring.security.user.password=password